{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "2ZzWWtPxsoN8",
        "-fxFtx1LsaYd",
        "ZAwuLqUroc_o",
        "OjmcIQouvGn3",
        "QE0bZN-ESAZC",
        "U5z83IiQ-rA9"
      ],
      "mount_file_id": "1bRaZkXOw1YnQ59MsnqSihvElPDiZ6fu3",
      "authorship_tag": "ABX9TyNh0FeR5Y+AlsCZeyBFAB4o"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "##read data"
      ],
      "metadata": {
        "id": "2ZzWWtPxsoN8"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3qOtOctl3ERY"
      },
      "outputs": [],
      "source": [
        "# # mount it\n",
        "# from google.colab import drive\n",
        "# drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "JGwS8rWM3kFG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "file_path = '/content/drive/MyDrive/Online Budget Hotel Dataset.xlsx'\n",
        "\n",
        "# membaca semua sheet dari file ke dalam sebuah dictionary berisi DataFrame\n",
        "all_sheets = pd.read_excel(file_path, sheet_name=None)\n",
        "all_sheets.keys()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cCuc4BuM30LT",
        "outputId": "5136b9d5-c8f6-4508-d56e-f23f6e504b66"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_keys(['Property Grade - For Reference', 'Bookings Table', 'User Table', 'Property Table'])"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# print tabel dari setiap sheet\n",
        "for sheet_name, data in all_sheets.items():\n",
        "    print(f\"\\nSheet: {sheet_name}\")\n",
        "    print(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "04uGWolI7OyE",
        "outputId": "46cacd8e-8e1a-4989-d649-44dad1e0e63f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Sheet: Property Grade - For Reference\n",
            "              Monthly Occupancy Percentage Grade\n",
            "0                  Monthly_occupancy > 80%     A\n",
            "1  Monthly_occupancy  between 70%> & < 80%     B\n",
            "2   Monthly_occupancy between 40%> & < 70%     C\n",
            "3   Monthly_occupancy between 20%> & < 40%     D\n",
            "4                 Monthly_occupancy < 20%      E\n",
            "\n",
            "Sheet: Bookings Table\n",
            "            BOOKING_ID   USER_ID PROPERTY_CODE BOOKING_DATE CHECK_IN_DATE  \\\n",
            "0      942481721995472   2382984       MAL0084   2024-04-19    2024-04-19   \n",
            "1      859896400600792   8922581       SUR0320   2024-07-21    2024-07-22   \n",
            "2      863313142099180  11027905       SUR0381   2021-05-29    2021-06-05   \n",
            "3      815705055066134   6964446       BAN0082   2022-03-31    2022-04-05   \n",
            "4      257574986800513   1387674       BAN0482   2021-06-08    2021-06-14   \n",
            "...                ...       ...           ...          ...           ...   \n",
            "99995  263870338457116   5475762       BAN0418   2022-12-01    2022-12-01   \n",
            "99996  251752438976268   4459005       SUR0211   2021-09-12    2021-09-12   \n",
            "99997  240409361711285   7083729       BAN0462   2024-05-28    2024-06-03   \n",
            "99998  817444145850194  12469957       JAK0383   2020-06-16    2020-06-16   \n",
            "99999  433990401433964  13131427       YOG0375   2021-01-03    2021-01-03   \n",
            "\n",
            "      CHECK_OUT_DATE  ROOMS  NIGHTS  ROOM_NIGHTS  REVENUE_DOLLAR  \n",
            "0         2024-04-20      2       1            2           15.03  \n",
            "1         2024-07-23      3       1            3           14.85  \n",
            "2         2021-06-06      1       1            1           17.88  \n",
            "3         2022-04-07      1       3            3           27.92  \n",
            "4         2021-06-17      1       2            2           22.57  \n",
            "...              ...    ...     ...          ...             ...  \n",
            "99995     2022-12-02      3       1            3           18.24  \n",
            "99996     2021-09-15      2       3            6           21.76  \n",
            "99997     2024-06-04      2       1            2           12.91  \n",
            "99998     2020-06-19      1       2            2           22.02  \n",
            "99999     2021-01-06      2       1            2           29.59  \n",
            "\n",
            "[100000 rows x 10 columns]\n",
            "\n",
            "Sheet: User Table\n",
            "      USER_ID    USER_TYPE USER_GENDER TRAVEL_PURPOSE  USER_AGE\n",
            "0     9860949     New User      Female       Business        47\n",
            "1    14615261     New User      Female        Leisure        28\n",
            "2     7663712     New User      Female        Leisure        56\n",
            "3    14003021  Repeat User        Male        Leisure        20\n",
            "4     9689090     New User        Male        Leisure        33\n",
            "..        ...          ...         ...            ...       ...\n",
            "995  11264158  Repeat User        Male        Leisure        52\n",
            "996  13699013  Repeat User        Male       Business        37\n",
            "997   8866257  Repeat User        Male        Leisure        58\n",
            "998   6163914     New User        Male        Leisure        32\n",
            "999   4817603  Repeat User      Female       Business        35\n",
            "\n",
            "[1000 rows x 5 columns]\n",
            "\n",
            "Sheet: Property Table\n",
            "    PROPERTY_CODE        CITY DISTRICT COHORT_DATE  BRAND_TYPE  INVENTORY\n",
            "0         YOG0000  Yogyakarta  Central  2022-04-12    Koolkost         31\n",
            "1         MAL0001      Malang    North  2023-12-31    RedDoorz         80\n",
            "2         BAN0002     Bandung     East  2020-06-11  RedPartner         58\n",
            "3         SUR0003    Surabaya    North  2024-05-02    RedDoorz         95\n",
            "4         JAK0004     Jakarta     West  2024-05-30    RedDoorz         72\n",
            "..            ...         ...      ...         ...         ...        ...\n",
            "495       YOG0495  Yogyakarta    South  2020-07-03    RedDoorz         67\n",
            "496       YOG0496  Yogyakarta    South  2020-09-05    RedDoorz         57\n",
            "497       SUR0497    Surabaya     East  2021-05-02  RedPartner         96\n",
            "498       BAN0498     Bandung  Central  2020-06-06    RedDoorz         28\n",
            "499       MAL0499      Malang  Central  2022-10-31    RedDoorz         26\n",
            "\n",
            "[500 rows x 6 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##preprocessing"
      ],
      "metadata": {
        "id": "-fxFtx1LsaYd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# check missing values\n",
        "for sheet_name, data in all_sheets.items():\n",
        "    print(f\"Missing values in {sheet_name}:\")\n",
        "    print(data.isnull().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Sw4ENvR_4zy-",
        "outputId": "d7d2d074-4926-4f02-c8f6-b7e3e2601bdc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Missing values in Property Grade - For Reference:\n",
            "Monthly Occupancy Percentage    0\n",
            "Grade                           0\n",
            "dtype: int64\n",
            "Missing values in Bookings Table:\n",
            "BOOKING_ID        0\n",
            "USER_ID           0\n",
            "PROPERTY_CODE     0\n",
            "BOOKING_DATE      0\n",
            "CHECK_IN_DATE     0\n",
            "CHECK_OUT_DATE    0\n",
            "ROOMS             0\n",
            "NIGHTS            0\n",
            "ROOM_NIGHTS       0\n",
            "REVENUE_DOLLAR    0\n",
            "dtype: int64\n",
            "Missing values in User Table:\n",
            "USER_ID           0\n",
            "USER_TYPE         0\n",
            "USER_GENDER       0\n",
            "TRAVEL_PURPOSE    0\n",
            "USER_AGE          0\n",
            "dtype: int64\n",
            "Missing values in Property Table:\n",
            "PROPERTY_CODE    0\n",
            "CITY             0\n",
            "DISTRICT         0\n",
            "COHORT_DATE      0\n",
            "BRAND_TYPE       0\n",
            "INVENTORY        0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# handling missing values\n",
        "for sheet_name, data in all_sheets.items():\n",
        "    for column in data.columns:\n",
        "        if data[column].isnull().sum() > 0:  # Cek jika ada nilai yang hilang di kolom\n",
        "            if data[column].dtype == 'object':\n",
        "                # Isi dengan modus (nilai yang sering muncul) untuk kolom bertipe objek\n",
        "                data[column] = data[column].fillna(data[column].mode()[0])\n",
        "            else:\n",
        "                # Isi dengan mean untuk kolom numerik\n",
        "                data[column] = data[column].fillna(data[column].mean())\n",
        "\n",
        "    print(f\"Missing values after filling in {sheet_name}:\")\n",
        "    print(data.isnull().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k5Mqw4pD0Ddc",
        "outputId": "cbbc5d54-25a6-4eae-d8d8-2d9c657ed681"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Missing values after filling in Property Grade - For Reference:\n",
            "Monthly Occupancy Percentage    0\n",
            "Grade                           0\n",
            "dtype: int64\n",
            "Missing values after filling in Bookings Table:\n",
            "BOOKING_ID        0\n",
            "USER_ID           0\n",
            "PROPERTY_CODE     0\n",
            "BOOKING_DATE      0\n",
            "CHECK_IN_DATE     0\n",
            "CHECK_OUT_DATE    0\n",
            "ROOMS             0\n",
            "NIGHTS            0\n",
            "ROOM_NIGHTS       0\n",
            "REVENUE_DOLLAR    0\n",
            "dtype: int64\n",
            "Missing values after filling in User Table:\n",
            "USER_ID           0\n",
            "USER_TYPE         0\n",
            "USER_GENDER       0\n",
            "TRAVEL_PURPOSE    0\n",
            "USER_AGE          0\n",
            "dtype: int64\n",
            "Missing values after filling in Property Table:\n",
            "PROPERTY_CODE    0\n",
            "CITY             0\n",
            "DISTRICT         0\n",
            "COHORT_DATE      0\n",
            "BRAND_TYPE       0\n",
            "INVENTORY        0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# check inconsistency data\n",
        "for sheet_name, data in all_sheets.items():\n",
        "    print(f\"\\nSheet: {sheet_name}\")\n",
        "    print(data.dtypes)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7_E_5xdZ8Svd",
        "outputId": "601576ab-dfd0-4fe2-801f-c8f6f4300f9d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Sheet: Property Grade - For Reference\n",
            "Monthly Occupancy Percentage    object\n",
            "Grade                           object\n",
            "dtype: object\n",
            "\n",
            "Sheet: Bookings Table\n",
            "BOOKING_ID                 int64\n",
            "USER_ID                    int64\n",
            "PROPERTY_CODE             object\n",
            "BOOKING_DATE      datetime64[ns]\n",
            "CHECK_IN_DATE     datetime64[ns]\n",
            "CHECK_OUT_DATE    datetime64[ns]\n",
            "ROOMS                      int64\n",
            "NIGHTS                     int64\n",
            "ROOM_NIGHTS                int64\n",
            "REVENUE_DOLLAR           float64\n",
            "dtype: object\n",
            "\n",
            "Sheet: User Table\n",
            "USER_ID            int64\n",
            "USER_TYPE         object\n",
            "USER_GENDER       object\n",
            "TRAVEL_PURPOSE    object\n",
            "USER_AGE           int64\n",
            "dtype: object\n",
            "\n",
            "Sheet: Property Table\n",
            "PROPERTY_CODE            object\n",
            "CITY                     object\n",
            "DISTRICT                 object\n",
            "COHORT_DATE      datetime64[ns]\n",
            "BRAND_TYPE               object\n",
            "INVENTORY                 int64\n",
            "dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# check dupiclates\n",
        "for sheet_name, data in all_sheets.items():\n",
        "    duplicates = data.duplicated()\n",
        "    print(f\"Duplicates in {sheet_name}: {duplicates.sum()}\")"
      ],
      "metadata": {
        "id": "kywrkYcljCbI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e61d69c7-e991-4553-e720-f04583bbf714"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Duplicates in Property Grade - For Reference: 0\n",
            "Duplicates in Bookings Table: 0\n",
            "Duplicates in User Table: 0\n",
            "Duplicates in Property Table: 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# handling duplicates\n",
        "\n",
        "def handle_duplicates(all_sheets):\n",
        "    for sheet_name, data in all_sheets.items():\n",
        "        # Cek duplikasi pada seluruh baris\n",
        "        duplicates = data.duplicated()\n",
        "\n",
        "        # Menampilkan jumlah duplikasi\n",
        "        print(f\"Duplicates in {sheet_name}: {duplicates.sum()}\")\n",
        "\n",
        "        # Menghapus duplikasi\n",
        "        data_cleaned = data.drop_duplicates()\n",
        "\n",
        "        # Menampilkan beberapa baris pertama data setelah duplikasi dihapus\n",
        "        print(f\"Data after removing duplicates in {sheet_name}:\")\n",
        "        print(data_cleaned.head())\n",
        "\n",
        "        # Menyimpan kembali data yang sudah dibersihkan\n",
        "        all_sheets[sheet_name] = data_cleaned\n",
        "\n",
        "    return all_sheets\n",
        "\n",
        "# Memanggil fungsi untuk menangani duplikasi\n",
        "all_sheets = handle_duplicates(all_sheets)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CiWRRI952ftF",
        "outputId": "7a335a8b-3262-4f75-877b-db0c270590a5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Duplicates in Property Grade - For Reference: 0\n",
            "Data after removing duplicates in Property Grade - For Reference:\n",
            "              Monthly Occupancy Percentage Grade\n",
            "0                  Monthly_occupancy > 80%     A\n",
            "1  Monthly_occupancy  between 70%> & < 80%     B\n",
            "2   Monthly_occupancy between 40%> & < 70%     C\n",
            "3   Monthly_occupancy between 20%> & < 40%     D\n",
            "4                 Monthly_occupancy < 20%      E\n",
            "Duplicates in Bookings Table: 0\n",
            "Data after removing duplicates in Bookings Table:\n",
            "        BOOKING_ID   USER_ID PROPERTY_CODE BOOKING_DATE CHECK_IN_DATE  \\\n",
            "0  942481721995472   2382984       MAL0084   2024-04-19    2024-04-19   \n",
            "1  859896400600792   8922581       SUR0320   2024-07-21    2024-07-22   \n",
            "2  863313142099180  11027905       SUR0381   2021-05-29    2021-06-05   \n",
            "3  815705055066134   6964446       BAN0082   2022-03-31    2022-04-05   \n",
            "4  257574986800513   1387674       BAN0482   2021-06-08    2021-06-14   \n",
            "\n",
            "  CHECK_OUT_DATE  ROOMS  NIGHTS  ROOM_NIGHTS  REVENUE_DOLLAR  \n",
            "0     2024-04-20      2       1            2           15.03  \n",
            "1     2024-07-23      3       1            3           14.85  \n",
            "2     2021-06-06      1       1            1           17.88  \n",
            "3     2022-04-07      1       3            3           27.92  \n",
            "4     2021-06-17      1       2            2           22.57  \n",
            "Duplicates in User Table: 0\n",
            "Data after removing duplicates in User Table:\n",
            "    USER_ID    USER_TYPE USER_GENDER TRAVEL_PURPOSE  USER_AGE\n",
            "0   9860949     New User      Female       Business        47\n",
            "1  14615261     New User      Female        Leisure        28\n",
            "2   7663712     New User      Female        Leisure        56\n",
            "3  14003021  Repeat User        Male        Leisure        20\n",
            "4   9689090     New User        Male        Leisure        33\n",
            "Duplicates in Property Table: 0\n",
            "Data after removing duplicates in Property Table:\n",
            "  PROPERTY_CODE        CITY DISTRICT COHORT_DATE  BRAND_TYPE  INVENTORY\n",
            "0       YOG0000  Yogyakarta  Central  2022-04-12    Koolkost         31\n",
            "1       MAL0001      Malang    North  2023-12-31    RedDoorz         80\n",
            "2       BAN0002     Bandung     East  2020-06-11  RedPartner         58\n",
            "3       SUR0003    Surabaya    North  2024-05-02    RedDoorz         95\n",
            "4       JAK0004     Jakarta     West  2024-05-30    RedDoorz         72\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fungsi untuk mendeteksi dan menangani outliers\n",
        "def handle_outliers(all_sheets):\n",
        "    for sheet_name, data in all_sheets.items():\n",
        "        print(f\"\\nHandling outliers in sheet: {sheet_name}\")\n",
        "\n",
        "        # Memilih hanya kolom numerik\n",
        "        numeric_cols = data.select_dtypes(include=['number'])\n",
        "\n",
        "        for col in numeric_cols.columns:\n",
        "            # Menghitung IQR\n",
        "            Q1 = numeric_cols[col].quantile(0.25)\n",
        "            Q3 = numeric_cols[col].quantile(0.75)\n",
        "            IQR = Q3 - Q1\n",
        "\n",
        "            # Menentukan batas bawah dan batas atas\n",
        "            lower_bound = Q1 - 1.5 * IQR\n",
        "            upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "            # Menandai outlier\n",
        "            outliers = (numeric_cols[col] < lower_bound) | (numeric_cols[col] > upper_bound)\n",
        "            print(f\"Column: {col} - Outliers detected: {outliers.sum()}\")\n",
        "\n",
        "            # Menghapus outlier dari DataFrame\n",
        "            data_cleaned = data[~outliers]\n",
        "            data = data_cleaned  # Update data\n",
        "\n",
        "        # Menyimpan kembali data yang sudah dibersihkan\n",
        "        all_sheets[sheet_name] = data\n",
        "\n",
        "    return all_sheets\n",
        "\n",
        "# Memanggil fungsi untuk menangani outliers\n",
        "all_sheets = handle_outliers(all_sheets)"
      ],
      "metadata": {
        "id": "BkB7YPG74asd",
        "outputId": "bce1254f-a27d-4697-e36b-c85510c96f16",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Handling outliers in sheet: Property Grade - For Reference\n",
            "\n",
            "Handling outliers in sheet: Bookings Table\n",
            "Column: BOOKING_ID - Outliers detected: 0\n",
            "Column: USER_ID - Outliers detected: 0\n",
            "Column: ROOMS - Outliers detected: 0\n",
            "Column: NIGHTS - Outliers detected: 0\n",
            "Column: ROOM_NIGHTS - Outliers detected: 0\n",
            "Column: REVENUE_DOLLAR - Outliers detected: 0\n",
            "\n",
            "Handling outliers in sheet: User Table\n",
            "Column: USER_ID - Outliers detected: 0\n",
            "Column: USER_AGE - Outliers detected: 0\n",
            "\n",
            "Handling outliers in sheet: Property Table\n",
            "Column: INVENTORY - Outliers detected: 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Booking Duration and Booking Lead Time:"
      ],
      "metadata": {
        "id": "ZAwuLqUroc_o"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ekstrak fitur baru dari data pemesanan yang terkait dengan **stay duration** dan\n",
        "\n",
        "**lead-time** (waktu antara booking time dan  check-in date)."
      ],
      "metadata": {
        "id": "EN42BZHFTrBl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bookings_data = all_sheets.get('Bookings Table')"
      ],
      "metadata": {
        "id": "ltLIHCyhM8ZD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Stay Duration** > selisih hari antara tanggal check-out (CHECK_OUT_DATE) dan tanggal check-in (CHECK_IN_DATE)\n"
      ],
      "metadata": {
        "id": "wQYQRwpOnLcO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# stay duration\n",
        "for sheet_name, data in all_sheets.items():\n",
        "    if {'CHECK_OUT_DATE', 'CHECK_IN_DATE'}.issubset(data.columns):\n",
        "        # menghitung stay duration\n",
        "        data['Stay Duration'] = (data['CHECK_OUT_DATE'] - data['CHECK_IN_DATE']).dt.days\n",
        "        print(f\"\\nSheet: {sheet_name}\")\n",
        "        print(data[['CHECK_OUT_DATE', 'CHECK_IN_DATE', 'BOOKING_DATE', 'Stay Duration']])\n",
        "\n",
        "        # menghitung jumlah setiap stay durations\n",
        "        stay_duration_counts = data['Stay Duration'].value_counts().sort_index()\n",
        "        print(\"\\nStay Duration Counts:\")\n",
        "        print(stay_duration_counts)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "05AVogRsP_AJ",
        "outputId": "8e0d37fe-2e5e-4785-f3e8-b5ab112391be"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Sheet: Bookings Table\n",
            "      CHECK_OUT_DATE CHECK_IN_DATE BOOKING_DATE  Stay Duration\n",
            "0         2024-04-20    2024-04-19   2024-04-19              1\n",
            "1         2024-07-23    2024-07-22   2024-07-21              1\n",
            "2         2021-06-06    2021-06-05   2021-05-29              1\n",
            "3         2022-04-07    2022-04-05   2022-03-31              2\n",
            "4         2021-06-17    2021-06-14   2021-06-08              3\n",
            "...              ...           ...          ...            ...\n",
            "99995     2022-12-02    2022-12-01   2022-12-01              1\n",
            "99996     2021-09-15    2021-09-12   2021-09-12              3\n",
            "99997     2024-06-04    2024-06-03   2024-05-28              1\n",
            "99998     2020-06-19    2020-06-16   2020-06-16              3\n",
            "99999     2021-01-06    2021-01-03   2021-01-03              3\n",
            "\n",
            "[100000 rows x 4 columns]\n",
            "\n",
            "Stay Duration Counts:\n",
            "Stay Duration\n",
            "1    33631\n",
            "2    33047\n",
            "3    33322\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "BjvXDpWZq0OW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "visualiasai durasi Menginap **(Stay Duration)** untuk menganalisis berapa lama pelanggan cenderung tinggal."
      ],
      "metadata": {
        "id": "5ZE9qOojSwhk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# visualisasi stay duration\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.histplot(bookings_data['Stay Duration'],bins=20, color='brown')\n",
        "plt.title('Distribution of Stay Duration', fontsize=16)\n",
        "plt.xlabel('Stay Duration (days)', fontsize=12)\n",
        "plt.ylabel('Frequency', fontsize=12)\n",
        "plt.grid(axis='y')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        },
        "id": "_aXZgCQYqCwR",
        "outputId": "be82093d-4fc6-4ee1-9376-f8b1e59fe2bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Interpretasi & Tindak Lanjut:\n",
        "Durasi menginap yang pendek mencerminkan preferensi pelanggan untuk perjalanan singkat, baik untuk kebutuhan bisnis, transit, atau liburan singkat.\n",
        "\n",
        "Tindak Lanjut: RedDoorz dapat menawarkan paket promosi menginap lebih lama, seperti diskon untuk malam kedua atau ketiga, guna meningkatkan rata-rata lama tinggal. Selain itu, strategi pemasaran dapat difokuskan pada segmentasi pelanggan bisnis yang sering melakukan perjalanan singkat."
      ],
      "metadata": {
        "id": "piGyNbtLEABw"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Lead Time** > jumlah hari antara tanggal pemesanan dilakukan (BOOKING_DATE) dan tanggal check-in (CHECK_IN_DATE)\n",
        "\n",
        "\n",
        "note:apakah tamu biasanya memesan jauh hari sebelumnya atau secara mendadak\n"
      ],
      "metadata": {
        "id": "bUWiJvrJTZRs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# lead time\n",
        "for sheet_name, data in all_sheets.items():\n",
        "    if {'BOOKING_DATE'}.issubset(data.columns):\n",
        "\n",
        "        data['Lead Time'] = (data['CHECK_IN_DATE'] - data['BOOKING_DATE']).dt.days\n",
        "\n",
        "        print(data[['CHECK_OUT_DATE', 'CHECK_IN_DATE', 'BOOKING_DATE','Lead Time']])\n",
        "\n",
        "        # menghitung jumlah lead time\n",
        "        stay_duration_counts = data['Lead Time'].value_counts().sort_index()\n",
        "        print(\"\\nLead Time Counts:\")\n",
        "        print(stay_duration_counts)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4Tn7XZ_FI7U3",
        "outputId": "eaf5c064-e616-4685-b1ff-3980b8fb9933"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      CHECK_OUT_DATE CHECK_IN_DATE BOOKING_DATE  Lead Time\n",
            "0         2024-04-20    2024-04-19   2024-04-19          0\n",
            "1         2024-07-23    2024-07-22   2024-07-21          1\n",
            "2         2021-06-06    2021-06-05   2021-05-29          7\n",
            "3         2022-04-07    2022-04-05   2022-03-31          5\n",
            "4         2021-06-17    2021-06-14   2021-06-08          6\n",
            "...              ...           ...          ...        ...\n",
            "99995     2022-12-02    2022-12-01   2022-12-01          0\n",
            "99996     2021-09-15    2021-09-12   2021-09-12          0\n",
            "99997     2024-06-04    2024-06-03   2024-05-28          6\n",
            "99998     2020-06-19    2020-06-16   2020-06-16          0\n",
            "99999     2021-01-06    2021-01-03   2021-01-03          0\n",
            "\n",
            "[100000 rows x 4 columns]\n",
            "\n",
            "Lead Time Counts:\n",
            "Lead Time\n",
            "0    35793\n",
            "1    17462\n",
            "2    13047\n",
            "3     9924\n",
            "4     7592\n",
            "5     5789\n",
            "6     4422\n",
            "7     3136\n",
            "8     1923\n",
            "9      912\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "visualisasi **Lead Time** untuk mengamati seberapa jauh sebelumnya pelanggan biasanya melakukan pemesanan."
      ],
      "metadata": {
        "id": "84CG05UiTK_z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# visualisasi lead time\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.histplot(bookings_data['Lead Time'], bins=20, color='purple')\n",
        "plt.title('Distribution of Lead Time', fontsize=16)\n",
        "plt.xlabel('Lead Time (days)', fontsize=12)\n",
        "plt.ylabel('Frequency', fontsize=12)\n",
        "plt.grid(axis='y')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        },
        "id": "6GZhTHuzq69e",
        "outputId": "b7960dc7-a65a-43d9-97c4-12f82e66b67d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Interpretasi:\n",
        "Lead time yang pendek menunjukkan bahwa banyak pelanggan membuat keputusan mendadak. Hal ini bisa disebabkan oleh kebutuhan darurat atau penawaran last-minute yang menarik.\n",
        "\n",
        "Tindak Lanjut:\n",
        "-Strategi Early Bird: Memberikan diskon atau keuntungan bagi pelanggan yang memesan jauh-jauh hari (misalnya, lebih dari 7 hari sebelum check-in).\n",
        "=Promosi Mendadak: Tetap mempertahankan promosi last-minute untuk menarik pelanggan yang membutuhkan pemesanan mendadak."
      ],
      "metadata": {
        "id": "focv0sjvEC81"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Revenue per Night and Booking Revenue Features:"
      ],
      "metadata": {
        "id": "OjmcIQouvGn3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ekstrak dan analisis fitur baru yang terkait dengan pendapatan (revenue), seperti pendapatan per malam (revenuew per night) dan total pendapatan pemesanan (total booking revenue)."
      ],
      "metadata": {
        "id": "ZN4hBcCPUXM6"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Revenue per Night** > membagi total pendapatan pemesanan (REVENUE_DOLLAR) dengan jumlah malam kamar (ROOM_NIGHTS)."
      ],
      "metadata": {
        "id": "OUNifK7kUzPH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# menghitung pendapatan per malam\n",
        "if {'REVENUE_DOLLAR', 'ROOM_NIGHTS'}.issubset(bookings_data.columns):\n",
        "    bookings_data['Revenue Per Night'] = bookings_data['REVENUE_DOLLAR'] / bookings_data['ROOM_NIGHTS']\n",
        "    print('\\nPendapatan per Malam')\n",
        "    print(bookings_data[['REVENUE_DOLLAR', 'ROOM_NIGHTS', 'Revenue Per Night']])\n",
        "    # print(bookings_data[['REVENUE_DOLLAR', 'ROOM_NIGHTS', 'Revenue Per Night']].head())"
      ],
      "metadata": {
        "id": "GtXs1iEbzBdq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e5bb2ed6-3729-4e26-bff8-7dcae60313d4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Pendapatan per Malam\n",
            "       REVENUE_DOLLAR  ROOM_NIGHTS  Revenue Per Night\n",
            "0               15.03            2           7.515000\n",
            "1               14.85            3           4.950000\n",
            "2               17.88            1          17.880000\n",
            "3               27.92            3           9.306667\n",
            "4               22.57            2          11.285000\n",
            "...               ...          ...                ...\n",
            "99995           18.24            3           6.080000\n",
            "99996           21.76            6           3.626667\n",
            "99997           12.91            2           6.455000\n",
            "99998           22.02            2          11.010000\n",
            "99999           29.59            2          14.795000\n",
            "\n",
            "[100000 rows x 3 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# # Visualisasi\n",
        "# plt.figure(figsize=(10, 6))\n",
        "# sns.histplot(bookings_data['Revenue Per Night'], bins=20, kde=True, color='orange')\n",
        "# plt.title('Distribusi Pendapatan per Malam', fontsize=16)\n",
        "# plt.xlabel('Pendapatan per Malam (dollar)', fontsize=12)\n",
        "# plt.ylabel('Frekuensi', fontsize=12)\n",
        "# plt.grid(axis='y')\n",
        "# plt.show()"
      ],
      "metadata": {
        "id": "3-vVkmc_zOr6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Total Booking Revenue** > mengelompokkan dataset berdasarkan USER_ID dan menjumlahkan total pendapatan untuk setiap pelanggan."
      ],
      "metadata": {
        "id": "sKi3OvtyVKcQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# total tendapatan pmesanan per pelanggan\n",
        "if 'USER_ID' in bookings_data.columns:\n",
        "    total_revenue_per_user = bookings_data.groupby('USER_ID')['REVENUE_DOLLAR'].sum().reset_index()\n",
        "    total_revenue_per_user.rename(columns={'REVENUE_DOLLAR': 'Total Booking Revenue'}, inplace=True)\n",
        "    total_revenue_per_user = total_revenue_per_user.sort_values(by='Total Booking Revenue', ascending=False)\n",
        "\n",
        "    print(\"\\n10 Pelanggan dengan Total Pendapatan Pemesanan Tertinggi:\")\n",
        "    print(total_revenue_per_user.head(10))"
      ],
      "metadata": {
        "id": "qwq3arbQzNop",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "19490c69-93d7-45e3-c1e1-50bc9935a73a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "10 Pelanggan dengan Total Pendapatan Pemesanan Tertinggi:\n",
            "     USER_ID  Total Booking Revenue\n",
            "384  6534621                2708.86\n",
            "457  7818238                2651.86\n",
            "392  6742780                2596.37\n",
            "119  2797960                2584.47\n",
            "2    1060239                2548.25\n",
            "4    1066789                2545.37\n",
            "26   1387674                2544.78\n",
            "47   1654979                2530.24\n",
            "600  9726170                2524.71\n",
            "178  3711707                2523.20\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# visualisasi 10 pelanggan dengan total pendapatan pemesanan tertinggi\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.barplot(data=total_revenue_per_user.head(10), x='USER_ID', y='Total Booking Revenue', hue= 'Total Booking Revenue')\n",
        "plt.legend(title='Total Booking Revenue', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "# sns.barplot(data=total_revenue_per_user.head(10), x='USER_ID', y='Total Booking Revenue')\n",
        "plt.title('10 Pelanggan dengan Total Pendapatan Pemesanan Tertinggi', fontsize=16)\n",
        "plt.xlabel('User ID', fontsize=12)\n",
        "plt.ylabel('Total Pendapatan Pemesanan (dollar)', fontsize=12)\n",
        "# plt.xticks(rotation=45)\n",
        "plt.grid(axis='y')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "mCqrmkI0zRq5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 392
        },
        "outputId": "3013a846-4e6a-446b-f45a-bb35ad8f5eed"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# # Bar Chart untuk Revenue Per Night\n",
        "# if {'Revenue Per Night', 'ROOM_NIGHTS'}.issubset(bookings_data.columns):\n",
        "#     plt.figure(figsize=(12, 6))\n",
        "#     # Mengelompokkan berdasarkan waktu atau properti jika ada kolom terkait (misalnya 'PROPERTY' atau 'CHECK_IN_DATE')\n",
        "#     if 'PROPERTY' in bookings_data.columns:\n",
        "#         avg_revenue_per_property = bookings_data.groupby('PROPERTY')['Revenue Per Night'].mean().reset_index()\n",
        "#         avg_revenue_per_property = avg_revenue_per_property.sort_values(by='Revenue Per Night', ascending=False)\n",
        "\n",
        "#         sns.barplot(data=avg_revenue_per_property, x='PROPERTY', y='Revenue Per Night', palette='viridis')\n",
        "#         plt.title('Pendapatan Rata-rata per Malam per Properti', fontsize=16)\n",
        "#         plt.xlabel('Properti', fontsize=12)\n",
        "#         plt.ylabel('Pendapatan per Malam (dollar)', fontsize=12)\n",
        "#         plt.xticks(rotation=45)\n",
        "#         plt.grid(axis='y')\n",
        "#     elif 'CHECK_IN_DATE' in bookings_data.columns:\n",
        "#         bookings_data['CHECK_IN_MONTH'] = bookings_data['CHECK_IN_DATE'].dt.to_period('M')  # Mengelompokkan berdasarkan bulan\n",
        "#         avg_revenue_per_month = bookings_data.groupby('CHECK_IN_MONTH')['Revenue Per Night'].mean().reset_index()\n",
        "#         avg_revenue_per_month = avg_revenue_per_month.sort_values(by='CHECK_IN_MONTH')\n",
        "\n",
        "#         sns.barplot(data=avg_revenue_per_month, x='CHECK_IN_MONTH', y='Revenue Per Night', palette='viridis')\n",
        "#         plt.title('Pendapatan Rata-rata per Malam per Bulan', fontsize=16)\n",
        "#         plt.xlabel('Bulan', fontsize=12)\n",
        "#         plt.ylabel('Pendapatan per Malam (dollar)', fontsize=12)\n",
        "#         plt.xticks(rotation=45)\n",
        "#         plt.grid(axis='y')\n",
        "#     else:\n",
        "#         print(\"Kolom untuk membandingkan performa (seperti 'PROPERTY' atau 'CHECK_IN_DATE') tidak ditemukan.\")\n",
        "\n",
        "#     plt.show()\n"
      ],
      "metadata": {
        "id": "T1klmudCxK0b"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 10 pelanggan yang menggunakan properti terbanyak\n",
        "top_10_revenue = total_revenue_per_user.head(10)\n",
        "\n",
        "# Menghitung total pendapatan\n",
        "total_revenue = top_10_revenue['Total Booking Revenue'].sum()\n",
        "\n",
        "# Menampilkan persentase per pelanggan\n",
        "for index, row in top_10_revenue.iterrows():\n",
        "    percentage = (row['Total Booking Revenue'] / total_revenue) * 100\n",
        "    print(f\"Pelanggan {row['USER_ID']} memiliki persentase {percentage:.1f}% dari total pendapatan.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qrj5mTZR0dwX",
        "outputId": "a099d67f-8778-4220-83a9-7fc80f5b6581"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pelanggan 6534621.0 memiliki persentase 10.5% dari total pendapatan.\n",
            "Pelanggan 7818238.0 memiliki persentase 10.3% dari total pendapatan.\n",
            "Pelanggan 6742780.0 memiliki persentase 10.1% dari total pendapatan.\n",
            "Pelanggan 2797960.0 memiliki persentase 10.0% dari total pendapatan.\n",
            "Pelanggan 1060239.0 memiliki persentase 9.9% dari total pendapatan.\n",
            "Pelanggan 1066789.0 memiliki persentase 9.9% dari total pendapatan.\n",
            "Pelanggan 1387674.0 memiliki persentase 9.9% dari total pendapatan.\n",
            "Pelanggan 1654979.0 memiliki persentase 9.8% dari total pendapatan.\n",
            "Pelanggan 9726170.0 memiliki persentase 9.8% dari total pendapatan.\n",
            "Pelanggan 3711707.0 memiliki persentase 9.8% dari total pendapatan.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top_10_revenue = total_revenue_per_user.head(10)\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.pie(top_10_revenue['Total Booking Revenue'], labels=top_10_revenue['USER_ID'], autopct='%1.1f%%', colors=sns.color_palette('crest', 10))\n",
        "\n",
        "plt.title('10 Pelanggan dengan Total Pendapatan Pemesanan Tertinggi', fontsize=16)\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "MH3nIoeq3wgB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 523
        },
        "outputId": "de544bda-1eba-425e-87c4-3811ebff2d49"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAArwAAAH6CAYAAADlU5+vAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAADX90lEQVR4nOzdd3iTVfsH8G920qbpXmmhlBYoZZYpQ0HZG0GWqID4+qqgAm59fdHXPcCtiD8UFVFBNrJH2bNQNqV0792mTbNzfn/UBkLT0pH2SdL7c129lGfeeZI8uXNyzn14jDEGQgghhBBCXBSf6wAIIYQQQghpTpTwEkIIIYQQl0YJLyGEEEIIcWmU8BJCCCGEEJdGCS8hhBBCCHFplPASQgghhBCXRgkvIYQQQghxaZTwEkIIIYQQl0YJLyGEEEIIcWkNTngTEhLw1VdfYe7cuejWrRuEQiF4PB7efffdeu2/b98+jB07Fn5+fpDJZIiKisIbb7yBioqKBge/evVq8Hg8qz8+nw9PT0/069cP7733XqOOe6fU1FTweDy0a9euyccizaf6NUAaJzY2tsb7qT5/b731FtehA2j8+3To0KE1HpNYLEZwcDAmTJiAbdu2NU/AdlJ9H5w7dy7Xobi82t4jHh4e6NGjB1599VXk5+dzHSZpYXPnzm3UvTM1NZWTeNu1a8fp+Zuq+n04dOjQBu0nbOiJvvvuO3zxxRcN3Q0A8Nlnn2HJkiXg8Xi49957ERgYiCNHjuD999/Hhg0bcPToUfj5+TX4uO7u7njooYcAACaTCcnJyTh58iTOnDmDX375BYcPH0ZgYGCjYiaktQgKCsKcOXNqLI+Pj8eFCxcQGBiI0aNH11jfs2fPBp3nrbfewttvv42lS5c6TLIMAD169LA8loqKCpw/fx7bt2/H9u3b8dxzzzX6vkfq1q5dO6SlpSElJcWpGhWq3yuMMaSlpeHkyZO4ePEiVq9ejdjYWERFRXEcIWkpgwcPtrn8r7/+glqtxqBBgxAZGVljvVwut3ssc+fOxc8//4yffvqJvgTfocEJb9euXfHiiy8iJiYGvXr1wvvvv49ff/31rvudP38eL7zwAgQCAbZt24YxY8YAACorKzFx4kTs378fTz31FP76668GPwg/Pz+sXr3aatnp06cxbNgw3LhxAy+99BJ++eWXBh+XkNYkKiqqxvsIqEpQL1y4UOt6VzF58mSrBNxsNuM///kPPvjgA3z55ZeYNGkSHnjgAe4CJA7lzvfCjRs3MGzYMGRmZuLJJ5/E4cOHuQmMtLgnnngCTzzxRI3lsbGxUKvVeOKJJxwq+dy/fz8MBgNCQkK4DqVR+vXrh2vXrsHNza1B+zW4S8MTTzyBTz75BA8//DCioqLA59fvEB988AEYY5g3b54l2QUANzc3rFq1Cnw+Hxs2bMD169cbGpJN/fr1wwsvvAAA2LhxI4xGo12OSwhpHfh8Pt555x20b98eALBu3TqOIyKOrGPHjnjnnXcAAEeOHEFOTg7HERFiW0REBKKioiASibgOpVHc3NwQFRWFtm3bNmi/Fhm0ptfr8ffffwMAHn744Rrrw8LCMGjQIADApk2b7Hbe3r17AwDUajUKCwsty41GI/7v//4PQ4cOhY+PDyQSCcLDw/H0008jIyOjQec4ffo0Xn75ZfTr1w9BQUEQi8UIDAzEhAkTsG/fPpv73N7nTq1W47XXXkNkZCQkEonlZ+WsrKxaz7llyxbce++98PDwgKenJ4YMGYK///77rn0Yjx49itGjR8PLywtyuRx9+/a1tHzX1v+Vi8dXlxMnTmDMmDGWx9CnTx/8+OOPd91Po9Fg2bJluOeee+Dl5QWpVIpOnTrh5ZdfRlFRkd0fQ2Oeo3379uHZZ59Fz5494efnB4lEgtDQUMyYMQNnzpyxeZ633nrL0o+2oKAACxYsQJs2bSAWi9GmTRs8++yzKC0tvev1aYrTp09j+vTpUCqVEIvFCAgIwIQJE7B3794a2/J4PLz99tsAgLffftuqP9vtLSBXr17F0qVLMWjQIISEhEAsFsPX1xfDhw9v0cRTIBBYujnc2d8tOzsbS5YsQefOneHm5gYPDw/07dsXX3/9tc0v2NX9/FavXo2UlBQ8+uijCAoKgkQiQUREBP7zn/9Ap9PZjMNoNOLzzz9Ht27dIJVK4e/vj6lTp+LSpUu1xm4wGLBmzRrMnj0bUVFRUCgUkMlk6NSpE5577jlkZ2fb3K+6T3NsbCwOHTqEkSNHwsfHB25ubujXr1+tv+gVFBTgyy+/xNixYxEeHg6ZTAaFQoE+ffrgo48+glartdq++j2WlpYGAAgPD7d6PcTGxlq23bhxI5544gl07doV3t7ekEqlCA8Px+OPP46EhASb8TTlejdW9WcOAMvjqvbXX39h9OjR8Pf3h1gsRkhICB555BFcvXq1xnFuv0+YzWZ8+eWX6N69O9zc3BAcHIynnnoKxcXFAACdTod33nkHUVFRkMlkUCqVeP7556FWq2uNMy4uDrNnz0bbtm0hkUjg4+ODUaNGYceOHTa3z8nJwfPPP4+OHTtCKpXCzc0Nbdq0wbBhw/Dpp5/W2L4ln6/y8nL88MMPmDJlCjp06AB3d3e4u7ujW7dueOONN2q9/93ej/XgwYMYOXIkvL29IZPJ0KtXrxb5VXj//v2YMmUKgoODLffOBx98ECdOnLC5/e2f0z/99BMGDBgAT09Py+Pg8Xj4+eefAQDz5s2rdaxFbX14b3/vx8fHY8qUKZbPoujoaCxbtgyMMZuxqdVqvPnmm+jQoQMkEgmUSiUef/xxZGVlWX1O3cloNGLZsmXo2rUrpFIpAgICMG3aNFy9erXW8QmN7cML1kRz5sxhANg777xT6zaXLl1iABgAplKpbG6zePFiBoBNmzat3uf+6aefGAAWFhZmc/2aNWss5y0uLmaMMaZSqdjQoUMZACaXy9mQIUPYQw89xDp16sQAMF9fX3bu3Dmr46SkpNR6nmHDhjE+n8+6devGxo4dy6ZNm8Z69eplOe/nn39ea9yTJ09m3bt3Z15eXmzChAls0qRJLCAgwHKu0tLSGvt+9NFHlmP379+fzZo1i/Xt25cBYC+//HKtcf7++++Mz+czAKxbt25s1qxZ7L777mN8Pp+98sorlmNy/fjqsm7dOiYQCBgA1rVrVzZr1iw2ePBgxuPx2JIlS2p9DFlZWaxbt24MAPPx8WHDhw9nDz74IAsLC2MAWLt27VhqaqrdHkNjn6OIiAgmFotZTEwMmzhxIpsyZQqLjo5mAJhQKGR//fVXjX2WLl3KALDHH3+chYaGssDAQDZlyhQ2duxY5unpyQCwvn37Mr1e36BrbescQ4YMqbFu5cqVltdVTEwMmzVrFhs4cKDl8b/11ltW28+ZM4f16NGDAWA9evRgc+bMsfz98MMPlu3mz5/PALCoqCg2atQoNmPGDDZgwADLuRYvXlwjlrrep3UZMmQIA8CWLl1qc/3w4cMZADZx4kTLskOHDjFvb2/L62fixIls1KhRlmUjR46scc2r75XPP/88UygULCwsjE2fPp0NHz6cyWQyy+vtTiaTiU2ePJkBYGKxmI0cOZLNmDGDtWvXjkmlUvbMM88wAGzOnDlW+2VkZDAAzNPTk91zzz1s2rRpbOzYsUypVDIAzN/fnyUmJtZ6PZ577jnG5/NZdHQ0mzlzpuV+AYAtWbKkxn6//vorA8BCQkLYkCFD2MyZM9mwYcOYXC5nANiAAQOYVqu1bH/kyBE2Z84c5u7uzgCwqVOnWr0erl27ZtlWIBAwNzc31qdPHzZlyhQ2ceJE1r59ewaAubu7s2PHjtWIp7HXuy4HDx6s9T7DGGNHjx61rK/+HDEYDGz69OkMAJNIJGzgwIFs2rRplveBTCZjO3futDrO7a/lWbNmMZlMxkaPHs0mT55suf/ExMSwiooKNnjwYKZQKNjEiRPZ+PHjLe/7MWPG2Izx888/tzyPPXv2ZA899BAbPHgwE4vFDAB7++23rbbPycmxvGbatm3LJk2axGbMmMHuvfde5uPjwzw9PWucoyWfryNHjlhez4MHD2YzZsxgI0eOZL6+vgwAi4yMZIWFhTX2q77/v/nmm4zH47HevXuzmTNnsnvuucfyHH722Wc2r2F9VZ/jp59+qrHuhRdeYAAYn89n/fr1Y9OmTWP9+/dnPB6PCQQC9uOPP9bYpzquhQsXMj6fzwYPHsxmzZrF+vfvz1JTU9mcOXNYREQEA8AGDRpk9X7atGlTjbhSUlKsjl/93n/11VeZWCxmnTt3ZjNnzmRDhgyxfPY+//zzNeKqqKiwfMbJ5XI2fvx4Nm3aNBYcHMwCAgLY3Llzbd5jTSYTGz9+fI17W/v27ZmbmxtbuHChzXtb9fvQ1mdSXVok4d26dSsDwLy8vGrdZvny5QwA69OnT73PfbeE96GHHrK8Sas9/PDDDAAbP348y8vLs9r+s88+YwBYhw4dmNFotCyv64N0x44dLDs7u8by48ePM4VCwUQiEcvMzLQZNwA2atQoVlZWZllXXFzMevbsyQCw999/32q/c+fOMYFAwAQCAdu4caPVunXr1lluYnfGmZWVZfnQ+eKLL6zWHTp0yPKBY+sm3pKPry45OTnMw8ODAWDLly+3Wrdv3z4mlUptPgaz2cwGDRrEALD58+dbfeEyGAyWm879999vl8fQ2OeIMcY2bdpk+WJ253KhUMh8fX1ZZWWl1brqZBQAmzt3rlVCkZ6ezkJCQhgAtnbt2hrHra/aEt6LFy8yoVDIeDwe++WXX6zW7dixw/IBumfPHpvHqy3BZIyx2NhYlpSUVGP59evXWWhoKAPATp06ZbWuORLe7Oxsy+vuv//9L2Os6rXo6+vLeDwe+/bbb5nJZLJsX1hYyB544AGbiUP1vRIAe+ONN6zuMZcuXbK8D48fP26139dff80AsMDAQHb16lXLcoPBwJ5++mnLMe/8UFCpVGzLli1Mp9NZLdfr9ey1115jANjYsWNrvR62Xt+xsbGW5GPXrl1W665evcpOnDhR43jFxcVs5MiRDAD7+OOPa6yv7cP3dn/88QerqKiwWmY2m9k333zDALAuXbows9lstb6x17sud0t4X3zxRQaASaVSy3v19ddft3z5TU5Ottp+/fr1TCAQMG9vb1ZSUmJZXv1aBsAiIiKsvpAXFhayDh06MKCq8aJfv35WCV1ycrLli9fRo0etzrdr1y7G4/GYn58fO3TokNW6ixcvWt5bsbGxluVvv/02A8CefPLJGtdYr9ezffv21bgOLfl8ZWRksH379lm9DxljTK1Ws8cee4wBYM8880yNGKtfdyKRiG3bts1qXfX939PTs8Y9tyFqS3hXrlxpScYvXLhgte7QoUPMw8ODicViduPGDat11ddHoVDYfK8xdus62kqy74yrtoQXAFuxYoXVuv3791uS8YyMDKt11Q2W0dHRVvmCRqOx5GG27rFffPEFA8CCg4PZ9evXLcuNRiN7/vnna723OXTC+9tvv1m++dem+gXQsWPHep/bVsJrNBpZYmKi1cWqTpCuXr3KeDweUyqVtbY0jx07lgGwegM09oO0+kPlm2++sRm3u7u7zWTyjz/+YADYAw88YLX88ccfZwDYrFmzbJ6v+oV1Z5z/+9//GFDVwmJL9U26tpt4bez9+Ory7rvvMgDsnnvusbn+9uf7djt37mRAVUuGwWCosZ/JZGJdu3ZlANilS5ea/Bga+xzdzaxZsxgA9vfff1str04eQ0NDmVqtrrHfhx9+yICqFuDGqi3hrW6FnTJlis39qr+djxgxwubx6kp46/L9998zAOyll16yWm7PhLeiooIdOnTI8muGu7s7S09PZ4wxyy8iCxcutHm8zMxMJhKJmL+/v9WHevW9snfv3jU+7Blj7KmnnmIA2P/+9z+r5ZGRkQwA++6772rso9FoWFBQkM0PhbtRKpWMz+fXuBdWX4+YmBib+1V/Sbzzea1LQkICA6p+bbhTfRLeugwYMIABYFeuXLFa3tjrXRdbCa/ZbGZpaWns3XffZUKhkAFVreOMMVZUVMRkMhmTSqU1GgaqVbfQf/XVV5Zltye8d77nGbvVQMTj8azuW9WeffZZm1+6+vfvzwDY/LWIsaov5UBVa/ud8d35Bb6xWvL5UqvVTCgUMn9//xrrql93tn6tYIyxqKgoBoAdPny43uer7Ry3J58mk8nSYn727Fmb+3388ccMAHvhhReslle/Juq6BvZIeGu7p48ePZoBsGrgqKystDSo7d69u8Y++fn5zM3NzeY9v7rV//vvv6+xn06nszTY2CvhbXCVBkeUlpZms/8pn8/HokWLsGjRIgDAjh07wBjDmDFj4OHhYfNYQ4cOxY4dO3D8+HGMHz++XucvKirC33//jcuXL6OkpAQGgwEAkJiYCAC19lnq06cPgoODayzv3LkzANToI3ro0CEAwOzZs20eb/bs2TarXNRnP1v9sKq11OOrS3V/vtoew5w5c2yWjaruOz516lQIhTVf7nw+H/fddx8uX76M48ePo2vXrk16DI19jqplZ2fj77//xvXr11FWVmbpC3rlyhUAVdd67NixNfYbNmyYzRGrjbnW9VX9nNQ2+nj+/Pn4+uuvceTIEZhMJggEggYdv6KiAjt37sT58+dRWFgIvV4PAJbBQLW97hrr7bfftvQvvl1AQADWrl2LNm3aALj1mpoxY4bN44SEhKBDhw64evUqEhMT0bFjR6v148ePt3m/svVcZWVl4ebNmwCARx55pMY+UqkU06dPx5dfflnr47pw4QL279+PlJQUqNVqmM1mAFV958xmM27evImYmJga+z322GM2jzdnzhwsW7YMR48erfG8mkwmxMbG4vjx48jJyYFGowGralgB0LTn7ObNm9i1axdu3ryJ8vJymEwmAEBeXp7l2NHR0TX2a8j1bojaan4//PDD+PjjjwEABw8ehEajwbBhw2odET906FB8++23OH78OBYuXGi1TigUYuTIkTX26dChAwCgbdu2Ne5Zt6+/vZ92YWEhTp8+DZlMhgkTJtQaCwAcP37csqxfv3749ttv8eqrr4IxhpEjR9arnFZLP1/Hjx/HkSNHkJ6ejsrKSstrTiwWo6CgACUlJfD29q6xX23XonPnzrh+/brd753nz59HdnY2IiIirPp8387W83C76jKszaWua7Jr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L9isZ99YPMYcrEgdIYQQQgghdkR9eAkhhBBCiEujhJcQQgghhLg0SngJIYQQQohLo4SXEEIIIYS4NEp4CSGEEEKIS6OElxBCCCGEuDRKeAkhhBBCiEujhJcQQgghhLg0SngJIYQQQohLo4SXEEIIIYS4NEp4CSGEEEKIS6OElxBCCCGEuDRKeAkhhBBCiEujhJcQQgghhLg0SngJIYQQQohLo4SXEEIIIYS4NEp4CSGEEEKIS6OElxBCCCGEuDRKeAkhhBBCiEujhJcQQgghhLg0SngJIYQQQohLo4SXEEIIIYS4NEp4CSGEEEKIS6OElxBCCCGEuDRKeAkhhBBCiEujhJcQ0myysrLwyCOPwNfXFzKZDN26dcPZs2ct63k8ns2/Tz75pMaxdDodevbsCR6Ph/j4eMvy2NhYTJo0CcHBwXB3d0fPnj3x22+/We07dOhQm+cZN26cZZuKigosXLgQoaGhkMlkiI6OxooVK6yOo9VqsWDBAvj6+kIul2Pq1KnIy8uz09UihBDSXCjhJYQ0i5KSEgwaNAgikQg7d+7E1atXsWzZMnh7e1u2ycnJsfr78ccfwePxMHXq1BrHe/nll6FUKmssP378OLp3744NGzbg4sWLmDdvHh577DFs377dss3GjRutznP58mUIBAJMmzbNss2SJUuwa9curFmzBteuXcOiRYuwcOFCbN261bLN4sWLsW3bNqxfvx6HDh1CdnY2pkyZYq9LRgghpJnwGGOM6yAIIa7n1VdfxbFjx3DkyJF67zN58mSUl5dj//79Vst37tyJJUuWYMOGDejSpQvOnz+Pnj171nqccePGITAwED/++KPN9Z9//jn++9//IicnB+7u7gCArl27YsaMGXjzzTct2/Xu3RtjxozBu+++i7KyMvj7+2Pt2rV46KGHAADXr19H586dceLECdxzzz31fpyEEEJaFrXwEkKaxdatW9GnTx9MmzYNAQEBiImJwQ8//FDr9nl5efj7778xf/78Gsv/9a9/4ddff4Wbm1u9zl1WVgYfH59a169atQozZ860JLsAMHDgQGzduhVZWVlgjOHgwYO4ceMGRo4cCQCIi4uDwWDA8OHDLftERUWhbdu2OHHiRL3iIoQQwg1KeAkhzSI5ORnfffcdOnTogN27d+Ppp5/Gc889h59//tnm9j///DM8PDysuggwxjB37lw8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YmJieOihh1zHS0tLueqqq0hNTUWtVnPzzTf3iHXatGm9xjJnzpxu97nnnnuwWq0YjUZmzpzJgQMH3PyqCeE+WqUDEEL0j1hLEC9ddylvbtnF79/9iuqmFqVDcosIfxN5SP9dT7G7pJKgACP1Ta1Kh3JMQxOjePiXFzKsH1uNrVixgl27drFq1Sqio6N5+eWXmTlzJnv27CEmJobS0u6L/T788EOWL1/OJZdcAsC+fftwOBz84x//ICUlhV27dnHttdfS3NzMo48+6jrv17/+NR999BGPPvoow4cPp6amhpqaHzcFsdlshIeHc9ddd/GXv/yl11jfeuutbol0dXU1I0eO5LLLLnM99qc//Yknn3ySF198kcTERO6++25mzZrFnj17MBgMbnnNhHAnKWkQYgBqbLPx9CebeP6r7dg6O5UO54ykmUPZI+3IPMrEQVa27jqkdBg9GPy03HT5VJZfNBGtpv8+4GxtbSUwMJB33nmn2yxpZmYms2fP5sEHH+xxzvz582lsbOTTTz895nUfeeQRnn76aQ4ePAjA3r17GTFiBLt27SItLe2EcU2bNo1Ro0bx+OOPH3fc448/zj333ENpaSkmkwmn00l0dDS/+c1vuO222wCor68nMjKSF154gSuuuOKE9xaiv0lJgxADUKBBz28vnMondyzlotHpqFRKR3R6Avx05BRXKR2GOEpdR/uJB/WzWVnpvP/YdVx38eR+TXYBOjs7sdvtPWY+jUYj69ev7zG+vLyc999/n+XLlx/3uvX19VgsFtfX7777LklJSbz33nskJiaSkJDAihUrus3wno7s7GyuuOIKTKauzV3y8/MpKytj5syZrjFBQUFkZWWxcePGM7qXEH1FEl4hBrBYSxBPLLqQN2+6msyEaKXDOWXJoaHSjswD7SurItISqHQYAGQNjefN3y/j77+9jASr5cQn9IHAwEAmTpzIAw88QElJCXa7nZdffpmNGzf2KGUAePHFFwkMDGTBggXHvGZubi5//etfue6661yPHTx4kEOHDrF69WpeeuklXnjhBbZt28all1562rFv3ryZXbt2sWLFCtdjZWVlAERGRnYbGxkZ6TomhKeRGl4hBKPjrbxx01V88N1+/vjeVxyurlc6pJOidXrp1LSPc6IiLjaU8ppGxWJIj4/gtqtnMD1zsGIx/NSqVatYtmwZMTExaDQa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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Interpretasi :\n",
        "Sebagian besar pendapatan berasal dari pelanggan besar, menunjukkan ketergantungan yang tinggi pada segmen ini.\n",
        "\n",
        "Tindak Lanjut:\n",
        "-Program Loyalitas: Memberikan insentif khusus, seperti penawaran eksklusif atau program VIP, untuk meningkatkan retensi pelanggan besar.\n",
        "-Diversifikasi Pendapatan: Mengurangi ketergantungan dengan menarik pelanggan baru melalui promosi yang lebih tersegmentasi dan fokus pada pelanggan dengan kontribusi menengah."
      ],
      "metadata": {
        "id": "hq3irU45EIcD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# import matplotlib.pyplot as plt\n",
        "# import seaborn as sns\n",
        "\n",
        "# # Asumsi `total_revenue_per_user` adalah DataFrame dengan kolom 'USER_ID' dan 'Total Booking Revenue'\n",
        "# top_10_revenue = total_revenue_per_user.head(10)\n",
        "\n",
        "# # Menghitung total pendapatan\n",
        "# total_revenue = top_10_revenue['Total Booking Revenue'].sum()\n",
        "\n",
        "# # Menampilkan persentase per pelanggan\n",
        "# for index, row in top_10_revenue.iterrows():\n",
        "#     percentage = (row['Total Booking Revenue'] / total_revenue) * 100\n",
        "#     print(f\"Pelanggan {row['USER_ID']} memiliki persentase {percentage:.1f}% dari total pendapatan.\")\n",
        "\n",
        "# # Membuat pie chart\n",
        "# plt.figure(figsize=(10, 6))\n",
        "# plt.pie(\n",
        "#     top_10_revenue['Total Booking Revenue'],\n",
        "#     labels=top_10_revenue['USER_ID'],\n",
        "#     autopct='%1.1f%%',\n",
        "#     colors=sns.color_palette('crest', 10)\n",
        "# )\n",
        "\n",
        "# plt.title('10 Pelanggan dengan Total Pendapatan Pemesanan Tertinggi', fontsize=16)\n",
        "# plt.show()\n"
      ],
      "metadata": {
        "id": "pkIwwslveVlQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Property Performance and Occupancy Rate:"
      ],
      "metadata": {
        "id": "QE0bZN-ESAZC"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Hitung dan visualisasikan fitur baru terkait tingkat hunian properti (Property Occupancy rate) dan total pendapatan per properti (Total revenue per Property)."
      ],
      "metadata": {
        "id": "FN6QjNTGV2wW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# memuat sheet tertentu dari file ke dalam DataFrame.\n",
        "property_data = all_sheets['Property Table']\n",
        "reservation_data = all_sheets['Bookings Table']\n",
        "property_grade_data = all_sheets['Property Grade - For Reference']\n",
        "user_data = all_sheets['User Table']"
      ],
      "metadata": {
        "id": "Dpx9jJFsXYlL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# convert dates to datetime format\n",
        "property_data['COHORT_DATE'] = pd.to_datetime(property_data['COHORT_DATE'])\n",
        "reservation_data['CHECK_IN_DATE'] = pd.to_datetime(reservation_data['CHECK_IN_DATE'])"
      ],
      "metadata": {
        "id": "csLgiN60XZ3q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Days Active** > selisih antara CHECK_IN_DATE dan COHORT_DATE (dari Property Table)."
      ],
      "metadata": {
        "id": "lja7iehYWW1V"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Menghitung Days Active\n",
        "days_active = bookings_data.merge(property_data, on='PROPERTY_CODE')\n",
        "days_active['Days_Active'] = (days_active['CHECK_IN_DATE'] - days_active['COHORT_DATE']).dt.days"
      ],
      "metadata": {
        "id": "UaJ1ZEbCB_Gx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Total Room Nights Booked dan Total Revenue per Property\n",
        "aggregated_data = days_active.groupby('PROPERTY_CODE').agg(\n",
        "    Total_Room_Nights_Booked=('ROOM_NIGHTS', 'sum'),\n",
        "    Total_Revenue=('REVENUE_DOLLAR', 'sum'),\n",
        "    Inventory=('INVENTORY', 'first'),\n",
        "    Days_Active=('Days_Active', 'max')\n",
        ").reset_index()\n",
        "\n",
        "print(aggregated_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7O64H12rCDQd",
        "outputId": "8d76e61c-bdb1-4997-ad97-fb078f5f34d2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    PROPERTY_CODE  Total_Room_Nights_Booked  Total_Revenue  Inventory  \\\n",
            "0         BAN0002                       924        4657.61         58   \n",
            "1         BAN0009                       813        4037.27         89   \n",
            "2         BAN0011                       723        3679.63         37   \n",
            "3         BAN0014                       867        4091.51         59   \n",
            "4         BAN0016                       782        3933.55         67   \n",
            "..            ...                       ...            ...        ...   \n",
            "495       YOG0484                       772        4042.25         23   \n",
            "496       YOG0490                       961        4785.12         23   \n",
            "497       YOG0493                       811        4010.52         68   \n",
            "498       YOG0495                       744        3895.75         67   \n",
            "499       YOG0496                       706        3420.22         57   \n",
            "\n",
            "     Days_Active  \n",
            "0           1572  \n",
            "1            161  \n",
            "2           1810  \n",
            "3           1482  \n",
            "4           1252  \n",
            "..           ...  \n",
            "495            2  \n",
            "496         1570  \n",
            "497         1615  \n",
            "498         1549  \n",
            "499         1474  \n",
            "\n",
            "[500 rows x 5 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Occupancy Rate** =\n",
        "(Total Room Nights Booked)/\n",
        "(Inventory x Days Active)  "
      ],
      "metadata": {
        "id": "gJU3mgN1WG-h"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Menghitung Occupancy Rate\n",
        "aggregated_data['Occupancy_Rate'] = (\n",
        "    aggregated_data['Total_Room_Nights_Booked'] /\n",
        "    (aggregated_data['Inventory'] * aggregated_data['Days_Active'])\n",
        ")\n",
        "\n",
        "print(aggregated_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f-OpHYs0COri",
        "outputId": "885aab3a-ff46-45a6-eb7b-ec2258a35a99"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    PROPERTY_CODE  Total_Room_Nights_Booked  Total_Revenue  Inventory  \\\n",
            "0         BAN0002                       924        4657.61         58   \n",
            "1         BAN0009                       813        4037.27         89   \n",
            "2         BAN0011                       723        3679.63         37   \n",
            "3         BAN0014                       867        4091.51         59   \n",
            "4         BAN0016                       782        3933.55         67   \n",
            "..            ...                       ...            ...        ...   \n",
            "495       YOG0484                       772        4042.25         23   \n",
            "496       YOG0490                       961        4785.12         23   \n",
            "497       YOG0493                       811        4010.52         68   \n",
            "498       YOG0495                       744        3895.75         67   \n",
            "499       YOG0496                       706        3420.22         57   \n",
            "\n",
            "     Days_Active  Occupancy_Rate  \n",
            "0           1572        0.010134  \n",
            "1            161        0.056738  \n",
            "2           1810        0.010796  \n",
            "3           1482        0.009916  \n",
            "4           1252        0.009322  \n",
            "..           ...             ...  \n",
            "495            2       16.782609  \n",
            "496         1570        0.026613  \n",
            "497         1615        0.007385  \n",
            "498         1549        0.007169  \n",
            "499         1474        0.008403  \n",
            "\n",
            "[500 rows x 6 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Top 10 Properties by Occupancy Rate\n",
        "top_10_properties = aggregated_data.nlargest(10, 'Occupancy_Rate')\n",
        "\n",
        "print(top_10_properties)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8bdHXCMqCVT_",
        "outputId": "05f12fdb-3150-485e-88db-5c5cd435ecec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    PROPERTY_CODE  Total_Room_Nights_Booked  Total_Revenue  Inventory  \\\n",
            "495       YOG0484                       772        4042.25         23   \n",
            "90        BAN0428                       712        3726.85         20   \n",
            "201       JAK0471                       929        4052.22         82   \n",
            "381       SUR0401                       852        4340.00         86   \n",
            "141       JAK0175                       762        3761.74         26   \n",
            "359       SUR0287                       793        3909.80         45   \n",
            "278       MAL0374                       724        3815.99         41   \n",
            "251       MAL0220                       819        4172.33         49   \n",
            "466       YOG0396                       765        4042.33         82   \n",
            "110       JAK0031                       974        4757.58         71   \n",
            "\n",
            "     Days_Active  Occupancy_Rate  \n",
            "495            2       16.782609  \n",
            "90             6        5.933333  \n",
            "201            2        5.664634  \n",
            "381            6        1.651163  \n",
            "141           28        1.046703  \n",
            "359           20        0.881111  \n",
            "278           21        0.840883  \n",
            "251           23        0.726708  \n",
            "466           16        0.583079  \n",
            "110           26        0.527627  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "menampilkan Occupancy Rate untuk 10 properti teratas"
      ],
      "metadata": {
        "id": "Kkv589vjaze1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualisasi Occupancy Rate\n",
        "plt.figure(figsize=(10, 6))\n",
        "# sns.barplot(data=top_10_properties, x='PROPERTY_CODE', y='Occupancy_Rate', palette='viridis')\n",
        "sns.barplot(data=top_10_properties, x='PROPERTY_CODE', y='Occupancy_Rate',color='pink')\n",
        "plt.title('Top 10 Properties by Occupancy Rate')\n",
        "plt.xlabel('Property Code')\n",
        "plt.ylabel('Occupancy Rate')\n",
        "# plt.xticks(rotation=45)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a2ArsQzjCgqe",
        "outputId": "2ae55601-5124-4856-c11e-2b052db35f6d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Interpretasi:\n",
        "Properti dengan tingkat hunian tinggi seperti YOG0484 menunjukkan lokasi atau layanan yang menarik bagi pelanggan, sedangkan properti dengan tingkat hunian rendah seperti JAK0031 (0,53%) memiliki potensi peningkatan.\n",
        "\n",
        "Tindak Lanjut:\n",
        "Optimalisasi Properti dengan Tingkat Hunian Tinggi: Meningkatkan kapasitas atau memperkenalkan paket eksklusif untuk properti populer.\n",
        "Strategi Peningkatan Properti dengan Hunian Rendah: Melakukan promosi lokal, meningkatkan fasilitas, atau mengadakan kolaborasi dengan platform wisata guna menarik lebih banyak tamu."
      ],
      "metadata": {
        "id": "qWCZo6WDERzj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "korelasi antara tingkat hunian (**Occupancy Rate**) dan total pendapatan per property (**Total Revenue per property**)."
      ],
      "metadata": {
        "id": "FI9F82mVbCfZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# visualisasi korelasi\n",
        "plt.figure(figsize=(14, 6))\n",
        "\n",
        "sns.scatterplot(\n",
        "    x='Occupancy_Rate',\n",
        "    y='Total_Revenue',\n",
        "    data=aggregated_data,\n",
        "    hue='Occupancy_Rate',\n",
        "    palette='viridis'\n",
        ")\n",
        "\n",
        "# regression line\n",
        "sns.regplot(\n",
        "    x='Occupancy_Rate',\n",
        "    y='Total_Revenue',\n",
        "    data=aggregated_data,\n",
        "    scatter=False,  # Hanya garis regresi\n",
        "    color='red'\n",
        ")\n",
        "\n",
        "plt.title('Correlation between Occupancy Rate and Total Revenue')\n",
        "plt.xlabel('Occupancy Rate')\n",
        "plt.ylabel('Total Revenue')\n",
        "\n",
        "plt.legend(title='Occupancy Rate', loc='upper left', bbox_to_anchor=(1, 1))\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vjlVBg9B1Cv4",
        "outputId": "c186fb38-d793-4999-fa9e-c3b12c142ba7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Korelasi Lemah:\n",
        "Berdasarkan grafik, tidak terlihat korelasi signifikan antara tingkat hunian (Occupancy Rate) dan total pendapatan (Total Revenue) per properti. Meskipun tingkat hunian meningkat, pendapatan tidak menunjukkan perubahan yang mencolok. Hal ini mengindikasikan bahwa faktor lain, selain hanya tingkat hunian, yang mungkin lebih berpengaruh terhadap total pendapatan.\n",
        "\n",
        "Konsistensi Pendapatan:\n",
        "Pendapatan untuk sebagian besar properti cenderung stabil, berkisar antara 3500 hingga 4500 pada grafik. Ini menunjukkan bahwa meskipun ada variasi dalam tingkat hunian, pendapatan tidak menunjukkan fluktuasi yang besar. Mungkin ada harga kamar yang tetap atau tarif tetap untuk properti tertentu.\n",
        "\n",
        "Outlier:\n",
        "Terdapat beberapa titik data yang jauh dari kelompok utama. Ini mengindikasikan adanya properti dengan performa yang sangat baik atau sangat buruk yang tidak mencerminkan tren umum. Properti-properti ini mungkin memiliki faktor yang memengaruhi hasil mereka yang perlu diperiksa lebih lanjut (misalnya, promosi besar-besaran, lokasi yang sangat strategis, atau strategi pricing yang berbeda)."
      ],
      "metadata": {
        "id": "iiGgoLo-EWYR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# # visualisasi\n",
        "# plt.figure(figsize=(10, 6))\n",
        "\n",
        "# sns.regplot(\n",
        "#     x='Occupancy_Rate',\n",
        "#     y='Total_Revenue',\n",
        "#     data=aggregated_data,\n",
        "#     scatter_kws={'alpha': 0.6}  # Transparansi titik scatter\n",
        "# )\n",
        "\n",
        "# plt.title('Correlation between Occupancy Rate and Total Revenue')\n",
        "# plt.xlabel('Occupancy Rate')\n",
        "# plt.ylabel('Total Revenue')\n",
        "\n",
        "# plt.show()\n"
      ],
      "metadata": {
        "id": "QaK23Z7DyiE-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##draft"
      ],
      "metadata": {
        "id": "U5z83IiQ-rA9"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "b8vfR7EvkbA5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # stay duration\n",
        "# for sheet_name, data in all_sheets.items():\n",
        "#     if {'CHECK_OUT_DATE', 'CHECK_IN_DATE'}.issubset(data.columns):\n",
        "\n",
        "\n",
        "#         data['Stay Duration'] = (data['CHECK_OUT_DATE'] - data['CHECK_IN_DATE']).dt.days\n",
        "\n",
        "#         print(f\"\\nSheet: {sheet_name}\")\n",
        "#         print(data[['CHECK_OUT_DATE', 'CHECK_IN_DATE', 'BOOKING_DATE', 'Stay Duration']])\n",
        "#         # print(data[['CHECK_OUT_DATE', 'CHECK_IN_DATE', 'BOOKING_DATE', 'Stay Duration', 'Lead Time']].head())"
      ],
      "metadata": {
        "id": "XlKo75dTmg7s"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# for sheet_name, data in all_sheets.items():\n",
        "#     if {'CHECK_OUT_DATE', 'CHECK_IN_DATE'}.issubset(data.columns):\n",
        "\n",
        "#         # Menghitung stay duration\n",
        "#         data['Stay Duration'] = (data['CHECK_OUT_DATE'] - data['CHECK_IN_DATE']).dt.days\n",
        "\n",
        "#         # Pengelompokan Stay Duration\n",
        "#         stay_bins = [-1, 1, 3, 7, 14, 30, float('inf')]  # Rentang hari\n",
        "#         stay_labels = ['0-1 hari', '2-3 hari', '4-7 hari', '8-14 hari', '15-30 hari', 'lebih dari 30 hari']\n",
        "#         data['Stay Duration Group'] = pd.cut(data['Stay Duration'], bins=stay_bins, labels=stay_labels, right=True)\n",
        "\n",
        "#         # hitung jumlah stay duration\n",
        "#         stay_duration_count = data['Stay Duration Group'].value_counts(sort=False)\n",
        "\n",
        "#         print(\"Jumlah per kelompok Stay Duration:\")\n",
        "#         print(stay_duration_count)"
      ],
      "metadata": {
        "id": "mFsltuvKGgEG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "        # # Plot Stay Duration Group\n",
        "        # plt.figure(figsize=(10, 5))\n",
        "        # sns.barplot(x=stay_duration_count.index, y=stay_duration_count.values, color=\"grey\")\n",
        "        # plt.title(f'Distribusi Stay Duration Group - {sheet_name}')\n",
        "        # plt.xlabel('Stay Duration Group')\n",
        "        # plt.ylabel('Jumlah')\n",
        "        # plt.xticks(rotation=45)\n",
        "        # plt.tight_layout()\n",
        "        # plt.show()"
      ],
      "metadata": {
        "id": "vubrK-KvHwcm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# for sheet_name, data in all_sheets.items():\n",
        "#     if {'BOOKING_DATE'}.issubset(data.columns):\n",
        "\n",
        "#         # Menghitung lead time\n",
        "#         data['Lead Time'] = (data['CHECK_IN_DATE'] - data['BOOKING_DATE']).dt.days\n",
        "\n",
        "#         # Pengelompokan Lead Time\n",
        "#         lead_bins = [-1, 7, 14, 30, 90, 180, float('inf')]  # Rentang hari\n",
        "#         lead_labels = ['0-7 hari', '8-14 hari', '15-30 hari', '31-90 hari', '91-180 hari', 'lebih dari 180 hari']\n",
        "#         data['Lead Time Group'] = pd.cut(data['Lead Time'], bins=lead_bins, labels=lead_labels, right=True)\n",
        "\n",
        "#         # Hitung jumlah leaad time\n",
        "#         lead_time_count = data['Lead Time Group'].value_counts(sort=False)\n",
        "\n",
        "#         print(\"\\nJumlah per kelompok Lead Time:\")\n",
        "#         print(lead_time_count)"
      ],
      "metadata": {
        "id": "Hd_TGjv_GpWR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Plot Lead Time Group\n",
        "# plt.figure(figsize=(10, 5))\n",
        "# sns.barplot(x=lead_time_count.index, y=lead_time_count.values)\n",
        "# plt.title(f'Distribusi Lead Time Group - {sheet_name}')\n",
        "# plt.xlabel('Lead Time Group')\n",
        "# plt.ylabel('Jumlah')\n",
        "# plt.xticks(rotation=45)\n",
        "# plt.tight_layout()\n",
        "# plt.show()"
      ],
      "metadata": {
        "id": "Ocek8ckYBqSL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "OFiNTqWYkZb3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "V8g37seqkxVU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# for sheet_name, data in all_sheets.items():\n",
        "#     print(f\"Anomalies in {sheet_name}:\")\n",
        "#     if \"USER_AGE\" in data.columns:\n",
        "#         print(data[data[\"USER_AGE\"] < 0])  # Contoh validasi usia\n",
        "#     if \"REVENUE_DOLLAR\" in data.columns:\n",
        "#         print(data[data[\"REVENUE_DOLLAR\"] < 0])  # Contoh validasi pendapatan\n"
      ],
      "metadata": {
        "id": "fgGFUKzFi377"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Check for missing values in each column\n",
        "# missing_values = data.isnull().sum()\n",
        "# print(\"Missing values per column:\\n\", missing_values)"
      ],
      "metadata": {
        "id": "tlgPgjFC7OqB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# print(\"Data types of columns:\\n\", data.dtypes)\n",
        "# # Optionally, check for non-numeric values in numeric columns\n",
        "# for column in data.select_dtypes(include=['object']).columns:\n",
        "#     unique_values = data[column].unique()\n",
        "#     print(f\"Unique values in {column}:\\n\", unique_values[:10])  # Display first 10 unique values\n"
      ],
      "metadata": {
        "id": "lF9Yb4Cm79DE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Proses penambahan fitur pada setiap sheet\n",
        "# for sheet_name, data in all_sheets.items():\n",
        "#     if {'CHECK_OUT_DATE', 'CHECK_IN_DATE', 'BOOKING_DATE'}.issubset(data.columns):\n",
        "#         # Pastikan kolom dalam format datetime\n",
        "#         data['CHECK_OUT_DATE'] = pd.to_datetime(data['CHECK_OUT_DATE'])\n",
        "#         data['CHECK_IN_DATE'] = pd.to_datetime(data['CHECK_IN_DATE'])\n",
        "#         data['BOOKING_DATE'] = pd.to_datetime(data['BOOKING_DATE'])\n",
        "\n",
        "#         # Hitung Stay Duration dan Lead Time\n",
        "#         data['Stay Duration'] = (data['CHECK_OUT_DATE'] - data['CHECK_IN_DATE']).dt.days\n",
        "#         data['Lead Time'] = (data['CHECK_IN_DATE'] - data['BOOKING_DATE']).dt.days\n",
        "\n",
        "#         # Tampilkan hasil\n",
        "#         print(f\"\\nSheet: {sheet_name}\")\n",
        "#         print(data[['CHECK_OUT_DATE', 'CHECK_IN_DATE', 'BOOKING_DATE', 'Stay Duration', 'Lead Time']].head())\n"
      ],
      "metadata": {
        "id": "t5u-ESb4lNQc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# for sheet_name, data in all_sheets.items():\n",
        "#     if {'CHECK_OUT_DATE', 'CHECK_IN_DATE', 'BOOKING_DATE'}.issubset(data.columns):\n",
        "\n",
        "#         # Menghitung Stay Duration dan Lead Time\n",
        "#         data['Stay Duration'] = (data['CHECK_OUT_DATE'] - data['CHECK_IN_DATE']).dt.days\n",
        "#         data['Lead Time'] = (data['CHECK_IN_DATE'] - data['BOOKING_DATE']).dt.days\n",
        "\n",
        "#         # Pengelompokan Stay Duration\n",
        "#         stay_bins = [-1, 1, 3, 7, 14, 30, float('inf')]  # Rentang hari\n",
        "#         stay_labels = ['0-1 hari', '2-3 hari', '4-7 hari', '8-14 hari', '15-30 hari', 'lebih dari 30 hari']\n",
        "#         data['Stay Duration Group'] = pd.cut(data['Stay Duration'], bins=stay_bins, labels=stay_labels, right=True)\n",
        "\n",
        "#         # Pengelompokan Lead Time\n",
        "#         lead_bins = [-1, 7, 14, 30, 90, 180, float('inf')]  # Rentang hari\n",
        "#         lead_labels = ['0-7 hari', '8-14 hari', '15-30 hari', '31-90 hari', '91-180 hari', 'lebih dari 180 hari']\n",
        "#         data['Lead Time Group'] = pd.cut(data['Lead Time'], bins=lead_bins, labels=lead_labels, right=True)\n",
        "\n",
        "#         # Hitung jumlah masing-masing kelompok\n",
        "#         stay_duration_count = data['Stay Duration Group'].value_counts(sort=False)\n",
        "#         lead_time_count = data['Lead Time Group'].value_counts(sort=False)\n",
        "\n",
        "#         print(f\"\\nSheet: {sheet_name}\")\n",
        "#         print(\"Jumlah per kelompok Stay Duration:\")\n",
        "#         print(stay_duration_count)\n",
        "#         print(\"\\nJumlah per kelompok Lead Time:\")\n",
        "#         print(lead_time_count)"
      ],
      "metadata": {
        "id": "JDzz-I9kOEaP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# #leadtimme\n",
        "# # ambil df dari sheet tertentu\n",
        "# bookings_data = all_sheets.get('Bookings Table')\n",
        "\n",
        "# print(bookings_data[['Stay Duration', 'Lead Time']])"
      ],
      "metadata": {
        "id": "8JAUKfT1p76T"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "GFIK8U7jD_zc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Korelasi untuk Top 10 Properties\n",
        "# correlation_top10 = top_10_properties['Occupancy_Rate'].corr(top_10_properties['Total_Revenue'])\n",
        "# print(f'Correlation between Occupancy Rate and Total Revenue (Top 10 Properties): {correlation_top10:.2f}')\n"
      ],
      "metadata": {
        "id": "2R9a8XRbDkWl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Scatter Plot: Occupancy Rate vs Total Revenue\n",
        "# plt.figure(figsize=(10, 6))\n",
        "# sns.scatterplot(data=aggregated_data, x='Occupancy_Rate', y='Total_Revenue', hue='PROPERTY_CODE')\n",
        "# plt.title('Correlation between Occupancy Rate and Total Revenue')\n",
        "# plt.xlabel('Occupancy Rate')\n",
        "# plt.ylabel('Total Revenue')\n",
        "# plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "# plt.show()"
      ],
      "metadata": {
        "id": "Mnzh14-3ClNA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# # Korelasi antara Occupancy Rate dan Total Revenue\n",
        "# correlation = aggregated_data['Occupancy_Rate'].corr(aggregated_data['Total_Revenue'])\n",
        "# print(f'Correlation between Occupancy Rate and Total Revenue: {correlation:.2f}')\n"
      ],
      "metadata": {
        "id": "jHM9uwLiAt0q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Calculate Days Active per Property\n",
        "# days_active = reservation_data.groupby('PROPERTY_CODE')['CHECK_IN_DATE'].max().reset_index()\n",
        "# days_active.columns = ['PROPERTY_CODE', 'Last_Booking_Date']\n",
        "# property_data = property_data.merge(days_active, on='PROPERTY_CODE', how='left')\n",
        "# property_data['Days_Active'] = (property_data['Last_Booking_Date'] - property_data['COHORT_DATE']).dt.days\n",
        "\n",
        "# # Print Days Active for each property\n",
        "# print(property_data[['PROPERTY_CODE', 'COHORT_DATE', 'Last_Booking_Date', 'Days_Active']])\n"
      ],
      "metadata": {
        "id": "eIIJp-d_XcTm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # jumlah room nights dan revenue per property\n",
        "# reservation_summary = reservation_data.groupby('PROPERTY_CODE').agg({\n",
        "#     'ROOM_NIGHTS': 'sum',\n",
        "#     'REVENUE_DOLLAR': 'sum'\n",
        "# }).reset_index()\n",
        "\n",
        "# # rename columns for clarity\n",
        "# reservation_summary.columns = ['PROPERTY_CODE', 'Total_Room_Nights', 'Total_Revenue']\n",
        "\n",
        "# # menggabungkan reservasi dengan data properti untuk mendapatkan total malam kamar dan pendapatan\n",
        "# property_data = property_data.merge(reservation_summary, on='PROPERTY_CODE', how='left', suffixes=('', '_Summary'))\n",
        "\n",
        "# # menghitung Occupancy Rate\n",
        "# property_data['Occupancy_Rate'] = (\n",
        "#     property_data['Total_Room_Nights'] /\n",
        "#     (property_data['INVENTORY'] * property_data['Days_Active'])\n",
        "# )\n",
        "\n",
        "# print(property_data[['PROPERTY_CODE', 'INVENTORY', 'Days_Active', 'Total_Room_Nights', 'Occupancy_Rate']])"
      ],
      "metadata": {
        "id": "qqpBf5_tXYcX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Set up the plot style\n",
        "# sns.set(style=\"whitegrid\")"
      ],
      "metadata": {
        "id": "TcogUP5PYKsa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # mengurutkan data properti berdasarkan 'Occupancy_Rate' dan mengambil 10 data teratas\n",
        "# top_10_properties = property_data.sort_values(by='Occupancy_Rate', ascending=False).head(10)\n",
        "\n",
        "# print(top_10_properties[['PROPERTY_CODE', 'Occupancy_Rate']])"
      ],
      "metadata": {
        "id": "BIElmxxAYNAK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # visualisasi Occupancy Rate untuk 10 properti teratas\n",
        "# plt.figure(figsize=(12, 6))\n",
        "# sns.barplot(x='PROPERTY_CODE', y='Occupancy_Rate', data=top_10_properties, hue='PROPERTY_CODE', palette='Blues', legend=False)\n",
        "# plt.title('Top 10 Properties by Occupancy Rate', fontsize=16)\n",
        "# plt.xlabel('Property Code', fontsize=14)\n",
        "# plt.ylabel('Occupancy Rate', fontsize=14)\n",
        "# plt.xticks(rotation=45)\n",
        "# plt.show()"
      ],
      "metadata": {
        "id": "GFm9SA4HYkTM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # membaut fungsi untuk memberi nilai berdasarkan 'Occupancy_Rate'.\n",
        "# def assign_grade(occupancy_rate):\n",
        "#     if occupancy_rate > 0.8:\n",
        "#         return 'A'\n",
        "#     elif 0.7 <= occupancy_rate <= 0.8:\n",
        "#         return 'B'\n",
        "#     elif 0.4 <= occupancy_rate < 0.7:\n",
        "#         return 'C'\n",
        "#     elif 0.2 <= occupancy_rate < 0.4:\n",
        "#         return 'D'\n",
        "#     else:\n",
        "#         return 'E'\n",
        "\n",
        "# # membuat nilai di kolom 'Grade' berdasarkan data di kolom 'Occupancy_Rate'.\n",
        "# property_data['Grade'] = property_data['Occupancy_Rate'].apply(assign_grade)\n",
        "\n",
        "# print(property_data[['PROPERTY_CODE', 'Occupancy_Rate', 'Grade']])\n"
      ],
      "metadata": {
        "id": "bizw2xnbXYK8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # vsiualisasi kolerasi (hubungan) antaar Occupancy Rate dan Total Revenue\n",
        "# plt.figure(figsize=(10, 6))\n",
        "# sns.scatterplot(x='Occupancy_Rate', y='Total_Revenue', data=property_data, hue='Grade', palette='Set1', s=100)\n",
        "# plt.title('Correlation Between Occupancy Rate and Total Revenue per Property', fontsize=16)\n",
        "# plt.xlabel('Occupancy Rate', fontsize=14)\n",
        "# plt.ylabel('Total Revenue (Dollar)', fontsize=14)\n",
        "# plt.legend(title='Grade', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "# plt.show()"
      ],
      "metadata": {
        "id": "h4ynpQ7TXYA9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Scatter Plot untuk Top 10 Properties by Occupancy Rate\n",
        "# plt.figure(figsize=(10, 6))\n",
        "# sns.scatterplot(\n",
        "#     data=aggregated_data[aggregated_data['PROPERTY_CODE'].isin(top_10_properties['PROPERTY_CODE'])],\n",
        "#     x='Occupancy_Rate',\n",
        "#     y='Total_Revenue',\n",
        "#     hue='PROPERTY_CODE',\n",
        "#     palette='viridis',\n",
        "#     s=100\n",
        "# )\n",
        "# plt.title('Correlation between Occupancy Rate and Total Revenue (Top 10 Properties)')\n",
        "# plt.xlabel('Occupancy Rate')\n",
        "# plt.ylabel('Total Revenue')\n",
        "# plt.legend(title='Property Code', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "# plt.show()\n",
        "\n"
      ],
      "metadata": {
        "id": "F_X37Vk9Dei0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Definisi fungsi assign_grade\n",
        "# def assign_grade(occupancy_rate):\n",
        "#     if occupancy_rate > 0.8:\n",
        "#         return 'A'\n",
        "#     elif 0.7 <= occupancy_rate <= 0.8:\n",
        "#         return 'B'\n",
        "#     elif 0.4 <= occupancy_rate < 0.7:\n",
        "#         return 'C'\n",
        "#     elif 0.2 <= occupancy_rate < 0.4:\n",
        "#         return 'D'\n",
        "#     else:\n",
        "#         return 'E'\n",
        "\n",
        "# # Menghitung Occupancy Rate di aggregated_data\n",
        "# aggregated_data['Occupancy_Rate'] = (\n",
        "#     aggregated_data['Total_Room_Nights_Booked'] /\n",
        "#     (aggregated_data['Inventory'] * aggregated_data['Days_Active'])\n",
        "# )\n",
        "\n",
        "# # Menambahkan grade berdasarkan Occupancy Rate\n",
        "# aggregated_data['Grade'] = aggregated_data['Occupancy_Rate'].apply(assign_grade)\n",
        "\n",
        "# # Menampilkan hasil\n",
        "# print(aggregated_data[['PROPERTY_CODE', 'Occupancy_Rate', 'Grade']])\n",
        "\n",
        "# # Menampilkan jumlah properti per grade\n",
        "# grade_summary = aggregated_data.groupby('Grade').size()\n",
        "# print(\"\\nJumlah Properti per Grade:\")\n",
        "# print(grade_summary)\n"
      ],
      "metadata": {
        "id": "C_0Qgpv1IKHo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# # Scatter Plot untuk melihat korelasi antara Occupancy Rate dan Total Revenue per Property\n",
        "# plt.figure(figsize=(10, 6))\n",
        "# sns.scatterplot(\n",
        "#     data=aggregated_data,\n",
        "#     x='Occupancy_Rate',\n",
        "#     y='Total_Revenue',\n",
        "#     hue='Grade',\n",
        "#     palette='viridis',\n",
        "#     s=100\n",
        "# )\n",
        "# plt.title('Correlation between Occupancy Rate and Total Revenue per Property')\n",
        "# plt.xlabel('Occupancy Rate')\n",
        "# plt.ylabel('Total Revenue')\n",
        "# plt.legend(title='Grade', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "# plt.show()"
      ],
      "metadata": {
        "id": "pi6U82EGJf6x"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# for sheet_name, data in all_sheets.items():\n",
        "#     print(f\"\\nChanging data types in {sheet_name}:\")\n",
        "\n",
        "#     if sheet_name == 'Property Grade - For Reference':\n",
        "#         # data['Monthly Occupancy Percentage'] = data['Monthly Occupancy Percentage'].replace({'%': ''}, regex=True).astype(float)\n",
        "#         data['Grade'] = data['Grade'].astype(str)\n",
        "\n",
        "#     elif sheet_name == 'Bookings Table':\n",
        "#         # data['PROPERTY_CODE'] = data['PROPERTY_CODE'].astype(int)\n",
        "#         data['ROOMS'] = data['ROOMS'].astype(int)\n",
        "#         data['NIGHTS'] = data['NIGHTS'].astype(int)\n",
        "#         data['ROOM_NIGHTS'] = data['ROOM_NIGHTS'].astype(int)\n",
        "\n",
        "#     elif sheet_name == 'User Table':\n",
        "#         data['USER_TYPE'] = data['USER_TYPE'].astype(str)\n",
        "#         data['USER_GENDER'] = data['USER_GENDER'].astype(str)\n",
        "#         data['TRAVEL_PURPOSE'] = data['TRAVEL_PURPOSE'].astype(str)\n",
        "\n",
        "#     elif sheet_name == 'Property Table':\n",
        "#         data['PROPERTY_CODE'] = data['PROPERTY_CODE'].astype(str)\n",
        "#         data['CITY'] = data['CITY'].astype(str)\n",
        "#         data['DISTRICT'] = data['DISTRICT'].astype(str)\n",
        "#         data['BRAND_TYPE'] = data['BRAND_TYPE'].astype(str)\n",
        "\n",
        "#     print(data.dtypes)"
      ],
      "metadata": {
        "id": "abgU5GR63VRt"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}